{
    "location": "dojo/DeferredList",
    "type": "function",
    "parameters": [
        {
            "name": "list",
            "types": [
                "Array"
            ],
            "usage": "required",
            "summary": "<p>The list of deferreds to be synchronizied with this DeferredList</p>\n"
        },
        {
            "name": "fireOnOneCallback",
            "types": [
                "Boolean"
            ],
            "usage": "optional",
            "summary": "<p>Will cause the DeferredLists callback to be fired as soon as any\nof the deferreds in its list have been fired instead of waiting until\nthe entire list has finished</p>\n"
        },
        {
            "name": "fireOnOneErrback",
            "types": [
                "Boolean"
            ],
            "usage": "optional"
        },
        {
            "name": "consumeErrors",
            "types": [
                "Boolean"
            ],
            "usage": "optional"
        },
        {
            "name": "canceller",
            "types": [
                "Function"
            ],
            "usage": "optional",
            "summary": "<p>A deferred canceller function, see dojo.Deferred</p>\n"
        }
    ],
    "returnTypes": [],
    "summary": "<p>Deprecated, use dojo/promise/all instead.\nProvides event handling for a group of Deferred objects.</p>\n",
    "description": "<p>DeferredList takes an array of existing deferreds and returns a new deferred of its own\nthis new deferred will typically have its callback fired when all of the deferreds in\nthe given list have fired their own deferreds.  The parameters <code>fireOnOneCallback</code> and\nfireOnOneErrback, will fire before all the deferreds as appropriate</p>\n",
    "methods": [
        {
            "name": "gatherResults",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/DeferredList",
            "parameters": [
                {
                    "name": "deferredList",
                    "types": [
                        "dojo/DeferredList"
                    ],
                    "usage": "required",
                    "summary": "<p>The deferred list from which this function gathers results.</p>\n"
                }
            ],
            "returnTypes": [
                "dojo/DeferredList"
            ],
            "returnDescription": "<p>The newly created deferred list which packs results as\nparameters to its callback.</p>\n",
            "summary": "<p>Gathers the results of the deferreds for packaging\nas the parameters to the Deferred Lists&#39; callback</p>\n"
        }
    ]
}