{
    "location": "dojo/ready",
    "type": "function",
    "parameters": [
        {
            "name": "priority",
            "types": [
                "Integer"
            ],
            "usage": "optional",
            "summary": "<p>The order in which to exec this callback relative to other callbacks, defaults to 1000</p>\n"
        },
        {
            "name": "context",
            "types": [
                "undefined"
            ],
            "usage": "required",
            "summary": "<p>The context in which to run execute callback, or a callback if not using context</p>\n"
        },
        {
            "name": "callback",
            "types": [
                "Function"
            ],
            "usage": "optional",
            "summary": "<p>The function to execute.\n</p>\n"
        }
    ],
    "returnTypes": [],
    "summary": "<p>Add a function to execute on DOM content loaded and all requested modules have arrived and been evaluated.\nIn most cases, the <code>domReady</code> plug-in should suffice and this method should not be needed.\n\n</p>\n<p>When called in a non-browser environment, just checks that all requested modules have arrived and been\nevaluated.</p>\n",
    "examples": [
        "<p>Simple DOM and Modules ready syntax\n\n</p>\nrequire([&quot;dojo/ready&quot;], function(ready){\n    ready(function(){ alert(&quot;Dom ready!&quot;); });\n});\n",
        "<p>Using a priority\n\n</p>\nrequire([&quot;dojo/ready&quot;], function(ready){\n    ready(2, function(){ alert(&quot;low priority ready!&quot;); })\n});\n",
        "<p>Using context\n\n</p>\nrequire([&quot;dojo/ready&quot;], function(ready){\n    ready(foo, function(){\n        // in here, this == foo\n    });\n});\n",
        "<p>Using dojo/hitch style args:\n\n</p>\nrequire([&quot;dojo/ready&quot;], function(ready){\n    var foo = { dojoReady: function(){ console.warn(this, &quot;dojo dom and modules ready.&quot;); } };\n    ready(foo, &quot;dojoReady&quot;);\n});\n"
    ],
    "methods": [
        {
            "name": "constructor",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/ready",
            "parameters": [
                {
                    "name": "priority",
                    "types": [
                        "Integer"
                    ],
                    "usage": "optional",
                    "summary": "<p>The order in which to exec this callback relative to other callbacks, defaults to 1000</p>\n"
                },
                {
                    "name": "context",
                    "types": [
                        "undefined"
                    ],
                    "usage": "required",
                    "summary": "<p>The context in which to run execute callback, or a callback if not using context</p>\n"
                },
                {
                    "name": "callback",
                    "types": [
                        "Function"
                    ],
                    "usage": "optional",
                    "summary": "<p>The function to execute.\n</p>\n"
                }
            ],
            "returnTypes": [],
            "summary": "<p>Add a function to execute on DOM content loaded and all requested modules have arrived and been evaluated.\nIn most cases, the <code>domReady</code> plug-in should suffice and this method should not be needed.\n\n</p>\n<p>When called in a non-browser environment, just checks that all requested modules have arrived and been\nevaluated.</p>\n",
            "examples": [
                "<p>Simple DOM and Modules ready syntax\n\n</p>\nrequire([&quot;dojo/ready&quot;], function(ready){\n    ready(function(){ alert(&quot;Dom ready!&quot;); });\n});\n",
                "<p>Using a priority\n\n</p>\nrequire([&quot;dojo/ready&quot;], function(ready){\n    ready(2, function(){ alert(&quot;low priority ready!&quot;); })\n});\n",
                "<p>Using context\n\n</p>\nrequire([&quot;dojo/ready&quot;], function(ready){\n    ready(foo, function(){\n        // in here, this == foo\n    });\n});\n",
                "<p>Using dojo/hitch style args:\n\n</p>\nrequire([&quot;dojo/ready&quot;], function(ready){\n    var foo = { dojoReady: function(){ console.warn(this, &quot;dojo dom and modules ready.&quot;); } };\n    ready(foo, &quot;dojoReady&quot;);\n});\n"
            ]
        }
    ],
    "apiPath": "../",
    "shortName": "ready"
}