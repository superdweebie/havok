{
    "location": "dojo/_base/kernel.__IoArgs",
    "type": "constructor",
    "classlike": true,
    "properties": [
        {
            "name": "content",
            "scope": "prototype",
            "types": [
                "Object"
            ],
            "from": "dojo/_base/xhr",
            "extensionModule": true,
            "summary": "<p>Contains properties with string values. These\nproperties will be serialized as name1=value2 and\npassed in the request.</p>\n"
        },
        {
            "name": "form",
            "scope": "prototype",
            "types": [
                "DOMNode"
            ],
            "from": "dojo/_base/xhr",
            "extensionModule": true,
            "summary": "<p>DOM node for a form. Used to extract the form values\nand send to the server.</p>\n"
        },
        {
            "name": "handleAs",
            "scope": "prototype",
            "types": [
                "String"
            ],
            "from": "dojo/_base/xhr",
            "extensionModule": true,
            "summary": "<p>Acceptable values depend on the type of IO\ntransport (see specific IO calls for more information).</p>\n"
        },
        {
            "name": "ioPublish",
            "scope": "prototype",
            "types": [
                "Boolean"
            ],
            "from": "dojo/_base/xhr",
            "extensionModule": true,
            "summary": "<p>Set this explicitly to false to prevent publishing of topics related to\nIO operations. Otherwise, if djConfig.ioPublish is set to true, topics\nwill be published via dojo/topic.publish() for different phases of an IO operation.\nSee dojo/main.__IoPublish for a list of topics that are published.</p>\n"
        },
        {
            "name": "preventCache",
            "scope": "prototype",
            "types": [
                "Boolean"
            ],
            "from": "dojo/_base/xhr",
            "extensionModule": true,
            "summary": "<p>Default is false. If true, then a\n&quot;dojo.preventCache&quot; parameter is sent in the request\nwith a value that changes with each request\n(timestamp). Useful only with GET-type requests.</p>\n"
        },
        {
            "name": "rawBody",
            "scope": "prototype",
            "types": [
                "String"
            ],
            "from": "dojo/_base/xhr",
            "extensionModule": true,
            "summary": "<p>Sets the raw body for an HTTP request. If this is used, then the content\nproperty is ignored. This is mostly useful for HTTP methods that have\na body to their requests, like PUT or POST. This property can be used instead\nof postData and putData for dojo/_base/xhr.rawXhrPost and dojo/_base/xhr.rawXhrPut respectively.</p>\n"
        },
        {
            "name": "timeout",
            "scope": "prototype",
            "types": [
                "Integer"
            ],
            "from": "dojo/_base/xhr",
            "extensionModule": true,
            "summary": "<p>Milliseconds to wait for the response. If this time\npasses, the then error callbacks are called.</p>\n"
        },
        {
            "name": "url",
            "scope": "prototype",
            "types": [
                "String"
            ],
            "from": "dojo/_base/xhr",
            "extensionModule": true,
            "summary": "<p>URL to server endpoint.</p>\n"
        }
    ],
    "methods": [
        {
            "name": "error",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/_base/xhr",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "response",
                    "types": [
                        "Object"
                    ],
                    "usage": "required",
                    "summary": "<p>The response in the format as defined with handleAs.</p>\n"
                },
                {
                    "name": "ioArgs",
                    "types": [
                        "dojo/main.__IoCallbackArgs"
                    ],
                    "usage": "required",
                    "summary": "<p>Provides additional information about the request.</p>\n"
                }
            ],
            "returnTypes": [],
            "summary": "<p>This function will\nbe called when the request fails due to a network or server error, the url\nis invalid, etc. It will also be called if the load or handle callback throws an\nexception, unless djConfig.debugAtAllCosts is true.  This allows deployed applications\nto continue to run even when a logic error happens in the callback, while making\nit easier to troubleshoot while in debug mode.</p>\n"
        },
        {
            "name": "handle",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/_base/xhr",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "loadOrError",
                    "types": [
                        "String"
                    ],
                    "usage": "required",
                    "summary": "<p>Provides a string that tells you whether this function\nwas called because of success (load) or failure (error).</p>\n"
                },
                {
                    "name": "response",
                    "types": [
                        "Object"
                    ],
                    "usage": "required",
                    "summary": "<p>The response in the format as defined with handleAs.</p>\n"
                },
                {
                    "name": "ioArgs",
                    "types": [
                        "dojo/main.__IoCallbackArgs"
                    ],
                    "usage": "required",
                    "summary": "<p>Provides additional information about the request.</p>\n"
                }
            ],
            "returnTypes": [],
            "summary": "<p>This function will\nbe called at the end of every request, whether or not an error occurs.</p>\n"
        },
        {
            "name": "load",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/_base/xhr",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "response",
                    "types": [
                        "Object"
                    ],
                    "usage": "required",
                    "summary": "<p>The response in the format as defined with handleAs.</p>\n"
                },
                {
                    "name": "ioArgs",
                    "types": [
                        "dojo/main.__IoCallbackArgs"
                    ],
                    "usage": "required",
                    "summary": "<p>Provides additional information about the request.</p>\n"
                }
            ],
            "returnTypes": [],
            "summary": "<p>This function will be\ncalled on a successful HTTP response code.</p>\n"
        }
    ]
}