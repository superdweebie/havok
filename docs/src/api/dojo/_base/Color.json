{
    "location": "dojo/_base/Color",
    "type": "function",
    "parameters": [
        {
            "name": "color",
            "types": [
                "Array",
                "String",
                "Object"
            ],
            "usage": "required"
        }
    ],
    "returnTypes": [],
    "summary": "<p>Takes a named string, hex string, array of rgb or rgba values,\nan object with r, g, b, and a properties, or another <code>Color</code> object\nand creates a new Color instance to work from.\n</p>\n",
    "examples": [
        "<p>Work with a Color instance:\n\n</p>\nvar c = new Color();\nc.setColor([0,0,0]); // black\nvar hex = c.toHex(); // #000000\n",
        "<p>Work with a node&#39;s color:\n\n</p>\nvar color = dojo.style(&quot;someNode&quot;, &quot;backgroundColor&quot;);\nvar n = new Color(color);\n// adjust the color some\nn.r *= .5;\nconsole.log(n.toString()); // rgb(128, 255, 255);\n"
    ],
    "properties": [
        {
            "name": "a",
            "scope": "prototype",
            "types": [
                "number"
            ],
            "from": "dojo/_base/Color"
        },
        {
            "name": "b",
            "scope": "prototype",
            "types": [
                "number"
            ],
            "from": "dojo/_base/Color"
        },
        {
            "name": "g",
            "scope": "prototype",
            "types": [
                "number"
            ],
            "from": "dojo/_base/Color"
        },
        {
            "name": "named",
            "scope": "normal",
            "types": [
                "object"
            ],
            "from": "dojo/_base/Color",
            "summary": "<p>Dictionary list of all CSS named colors, by name. Values are 3-item arrays with corresponding RG and B values.</p>\n"
        },
        {
            "name": "r",
            "scope": "prototype",
            "types": [
                "number"
            ],
            "from": "dojo/_base/Color"
        }
    ],
    "methods": [
        {
            "name": "_set",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "private": true,
            "parameters": [
                {
                    "name": "r",
                    "types": [
                        "undefined"
                    ],
                    "usage": "required"
                },
                {
                    "name": "g",
                    "types": [
                        "undefined"
                    ],
                    "usage": "required"
                },
                {
                    "name": "b",
                    "types": [
                        "undefined"
                    ],
                    "usage": "required"
                },
                {
                    "name": "a",
                    "types": [
                        "undefined"
                    ],
                    "usage": "required"
                }
            ],
            "returnTypes": []
        },
        {
            "name": "blendColors",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "parameters": [
                {
                    "name": "start",
                    "types": [
                        "havok/form/Color"
                    ],
                    "usage": "required"
                },
                {
                    "name": "end",
                    "types": [
                        "havok/form/Color"
                    ],
                    "usage": "required"
                },
                {
                    "name": "weight",
                    "types": [
                        "Number"
                    ],
                    "usage": "required"
                },
                {
                    "name": "obj",
                    "types": [
                        "havok/form/Color"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [],
            "summary": "<p>Blend colors end and start with weight from 0 to 1, 0.5 being a 50/50 blend,\ncan reuse a previously allocated Color object for the result</p>\n"
        },
        {
            "name": "constructor",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "parameters": [
                {
                    "name": "color",
                    "types": [
                        "Array",
                        "String",
                        "Object"
                    ],
                    "usage": "required"
                }
            ],
            "returnTypes": [],
            "summary": "<p>Takes a named string, hex string, array of rgb or rgba values,\nan object with r, g, b, and a properties, or another <code>Color</code> object\nand creates a new Color instance to work from.\n</p>\n",
            "examples": [
                "<p>Work with a Color instance:\n\n</p>\nvar c = new Color();\nc.setColor([0,0,0]); // black\nvar hex = c.toHex(); // #000000\n",
                "<p>Work with a node&#39;s color:\n\n</p>\nvar color = dojo.style(&quot;someNode&quot;, &quot;backgroundColor&quot;);\nvar n = new Color(color);\n// adjust the color some\nn.r *= .5;\nconsole.log(n.toString()); // rgb(128, 255, 255);\n"
            ]
        },
        {
            "name": "fromArray",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "parameters": [
                {
                    "name": "a",
                    "types": [
                        "Array"
                    ],
                    "usage": "required"
                },
                {
                    "name": "obj",
                    "types": [
                        "havok/form/Color"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "any"
            ],
            "returnDescription": "<p>A Color object. If obj is passed, it will be the return value.</p>\n",
            "summary": "<p>Builds a <code>Color</code> from a 3 or 4 element array, mapping each\nelement in sequence to the rgb(a) values of the color.</p>\n",
            "examples": [
                "var myColor = dojo.colorFromArray([237,237,237,0.5]); // grey, 50% alpha\n"
            ]
        },
        {
            "name": "fromHex",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "parameters": [
                {
                    "name": "color",
                    "types": [
                        "String"
                    ],
                    "usage": "required"
                },
                {
                    "name": "obj",
                    "types": [
                        "havok/form/Color"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "any",
                "null",
                "string"
            ],
            "returnDescription": "<p>A Color object. If obj is passed, it will be the return value.\n</p>\n",
            "summary": "<p>Converts a hex string with a &#39;#&#39; prefix to a color object.\nSupports 12-bit #rgb shorthand. Optionally accepts a\n<code>Color</code> object to update with the parsed value.\n</p>\n",
            "examples": [
                "var thing = dojo.colorFromHex(&quot;#ededed&quot;); // grey, longhand\n",
                "var thing = dojo.colorFromHex(&quot;#000&quot;); // black, shorthand\n"
            ]
        },
        {
            "name": "fromHsv",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "havok/form/Color",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "hue",
                    "types": [
                        "undefined"
                    ],
                    "usage": "required"
                },
                {
                    "name": "saturation",
                    "types": [
                        "undefined"
                    ],
                    "usage": "required"
                },
                {
                    "name": "value",
                    "types": [
                        "undefined"
                    ],
                    "usage": "required"
                }
            ],
            "returnTypes": [
                "instance"
            ],
            "summary": "<p>Create a Color from an HSV defined color.\nhue from 0-359 (degrees), saturation and value 0-100.</p>\n"
        },
        {
            "name": "fromRgb",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "parameters": [
                {
                    "name": "color",
                    "types": [
                        "String"
                    ],
                    "usage": "required"
                },
                {
                    "name": "obj",
                    "types": [
                        "havok/form/Color"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "any"
            ],
            "returnDescription": "<p>A Color object. If obj is passed, it will be the return value.</p>\n",
            "summary": "<p>Returns a <code>Color</code> instance from a string of the form\n&quot;rgb(...)&quot; or &quot;rgba(...)&quot;. Optionally accepts a <code>Color</code>\nobject to update with the parsed value and return instead of\ncreating a new object.</p>\n"
        },
        {
            "name": "fromString",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "parameters": [
                {
                    "name": "str",
                    "types": [
                        "String"
                    ],
                    "usage": "required"
                },
                {
                    "name": "obj",
                    "types": [
                        "havok/form/Color"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "any"
            ],
            "returnDescription": "<p>A Color object. If obj is passed, it will be the return value.</p>\n",
            "summary": "<p>Parses <code>str</code> for a color value. Accepts hex, rgb, and rgba\nstyle color values.</p>\n",
            "description": "<p>Acceptable input values for str may include arrays of any form\naccepted by dojo.colorFromArray, hex strings such as &quot;#aaaaaa&quot;, or\nrgb or rgba strings such as &quot;rgb(133, 200, 16)&quot; or &quot;rgba(10, 10,\n10, 50)&quot;</p>\n"
        },
        {
            "name": "sanitize",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "parameters": [],
            "returnTypes": [
                "function"
            ],
            "returnDescription": "<p>Ensures the object has correct attributes</p>\n",
            "summary": "<p>Ensures the object has correct attributes</p>\n",
            "description": "<p>the default implementation does nothing, include dojo.colors to\naugment it with real checks</p>\n"
        },
        {
            "name": "setColor",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "parameters": [
                {
                    "name": "color",
                    "types": [
                        "Array",
                        "String",
                        "Object"
                    ],
                    "usage": "required"
                }
            ],
            "returnTypes": [
                "function"
            ],
            "returnDescription": "<p>Takes a named string, hex string, array of rgb or rgba values,\nan object with r, g, b, and a properties, or another <code>Color</code> object\nand sets this color instance to that value.\n</p>\n",
            "summary": "<p>Takes a named string, hex string, array of rgb or rgba values,\nan object with r, g, b, and a properties, or another <code>Color</code> object\nand sets this color instance to that value.\n</p>\n",
            "examples": [
                "var c = new Color(); // no color\nc.setColor(&quot;#ededed&quot;); // greyish\n"
            ]
        },
        {
            "name": "toCss",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "parameters": [
                {
                    "name": "includeAlpha",
                    "types": [
                        "Boolean"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "string"
            ],
            "summary": "<p>Returns a css color string in rgb(a) representation</p>\n",
            "examples": [
                "var c = new Color(&quot;#FFF&quot;).toCss();\nconsole.log(c); // rgb(&#39;255&#39;,&#39;255&#39;,&#39;255&#39;)\n"
            ]
        },
        {
            "name": "toHex",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "parameters": [],
            "returnTypes": [
                "string"
            ],
            "summary": "<p>Returns a CSS color string in hexadecimal representation</p>\n",
            "examples": [
                "console.log(new Color([0,0,0]).toHex()); // #000000\n"
            ]
        },
        {
            "name": "toHsv",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "havok/form/Color",
            "extensionModule": true,
            "parameters": [],
            "returnTypes": [
                "object"
            ],
            "summary": "<p>Convert this Color to an HSV definition.</p>\n"
        },
        {
            "name": "toRgb",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "parameters": [],
            "returnTypes": [
                "Array"
            ],
            "summary": "<p>Returns 3 component array of rgb values</p>\n",
            "examples": [
                "var c = new Color(&quot;#000000&quot;);\nconsole.log(c.toRgb()); // [0,0,0]\n"
            ]
        },
        {
            "name": "toRgba",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "parameters": [],
            "returnTypes": [
                "Array"
            ],
            "summary": "<p>Returns a 4 component array of rgba values from the color\nrepresented by this object.</p>\n"
        },
        {
            "name": "toString",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dojo/_base/Color",
            "parameters": [],
            "returnTypes": [
                "undefined"
            ],
            "summary": "<p>Returns a visual representation of the color</p>\n"
        }
    ]
}