{
    "location": "dojo/fx.easing",
    "type": "object",
    "summary": "<p>Collection of easing functions to use beyond the default\n<code>dojo._defaultEasing</code> function.</p>\n",
    "description": "<p>Easing functions are used to manipulate the iteration through\nan <code>dojo.Animation</code>s _Line. _Line being the properties of an Animation,\nand the easing function progresses through that Line determining\nhow quickly (or slowly) it should go. Or more accurately: modify\nthe value of the _Line based on the percentage of animation completed.\n\n</p>\n<p>All functions follow a simple naming convention of &quot;ease type&quot; + &quot;when&quot;.\nIf the name of the function ends in Out, the easing described appears\ntowards the end of the animation. &quot;In&quot; means during the beginning,\nand InOut means both ranges of the Animation will applied, both\nbeginning and end.\n\n</p>\n<p>One does not call the easing function directly, it must be passed to\nthe <code>easing</code> property of an animation.</p>\n",
    "examples": [
        "dojo.require(&quot;dojo.fx.easing&quot;);\nvar anim = dojo.fadeOut({\n    node: &#39;node&#39;,\n    duration: 2000,\n    //  note there is no ()\n    easing: dojo.fx.easing.quadIn\n}).play();\n"
    ],
    "methods": [
        {
            "name": "backIn",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ],
            "summary": "<p>An easing function that starts away from the target,\nand quickly accelerates towards the end value.\n\n</p>\n<p>Use caution when the easing will cause values to become\nnegative as some properties cannot be set to negative values.</p>\n"
        },
        {
            "name": "backInOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ],
            "summary": "<p>An easing function combining the effects of <code>backIn</code> and <code>backOut</code></p>\n",
            "description": "<p>An easing function combining the effects of <code>backIn</code> and <code>backOut</code>.\nUse caution when the easing will cause values to become negative\nas some properties cannot be set to negative values.</p>\n"
        },
        {
            "name": "backOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ],
            "summary": "<p>An easing function that pops past the range briefly, and slowly comes back.</p>\n",
            "description": "<p>An easing function that pops past the range briefly, and slowly comes back.\n\n</p>\n<p>Use caution when the easing will cause values to become negative as some\nproperties cannot be set to negative values.</p>\n"
        },
        {
            "name": "bounceIn",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ],
            "summary": "<p>An easing function that &#39;bounces&#39; near the beginning of an Animation</p>\n"
        },
        {
            "name": "bounceInOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ],
            "summary": "<p>An easing function that &#39;bounces&#39; at the beginning and end of the Animation</p>\n"
        },
        {
            "name": "bounceOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ],
            "summary": "<p>An easing function that &#39;bounces&#39; near the end of an Animation</p>\n"
        },
        {
            "name": "circIn",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "circInOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "circOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "undefined"
            ]
        },
        {
            "name": "cubicIn",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "undefined"
            ]
        },
        {
            "name": "cubicInOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "cubicOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "elasticIn",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "Decimal",
                "number"
            ],
            "summary": "<p>An easing function the elastically snaps from the start value</p>\n",
            "description": "<p>An easing function the elastically snaps from the start value\n\n</p>\n<p>Use caution when the elasticity will cause values to become negative\nas some properties cannot be set to negative values.</p>\n"
        },
        {
            "name": "elasticInOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ],
            "summary": "<p>An easing function that elasticly snaps around the value, near\nthe beginning and end of the Animation.</p>\n",
            "description": "<p>An easing function that elasticly snaps around the value, near\nthe beginning and end of the Animation.\n\n</p>\n<p>Use caution when the elasticity will cause values to become\nnegative as some properties cannot be set to negative values.</p>\n"
        },
        {
            "name": "elasticOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "Decimal",
                "number"
            ],
            "summary": "<p>An easing function that elasticly snaps around the target value,\nnear the end of the Animation</p>\n",
            "description": "<p>An easing function that elasticly snaps around the target value,\nnear the end of the Animation\n\n</p>\n<p>Use caution when the elasticity will cause values to become\nnegative as some properties cannot be set to negative values.</p>\n"
        },
        {
            "name": "expoIn",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "undefined"
            ]
        },
        {
            "name": "expoInOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "expoOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "linear",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "Decimal"
            ],
            "summary": "<p>A linear easing function</p>\n"
        },
        {
            "name": "quadIn",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "undefined"
            ]
        },
        {
            "name": "quadInOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "quadOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "quartIn",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "undefined"
            ]
        },
        {
            "name": "quartInOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "quartOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "quintIn",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "undefined"
            ]
        },
        {
            "name": "quintInOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "quintOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "sineIn",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "sineInOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "number"
            ]
        },
        {
            "name": "sineOut",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dojo/fx/easing",
            "extensionModule": true,
            "parameters": [
                {
                    "name": "n",
                    "types": [
                        "Decimal"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "undefined"
            ]
        }
    ],
    "apiPath": "../",
    "shortName": "fx.easing"
}