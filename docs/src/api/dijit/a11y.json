{
    "location": "dijit/a11y",
    "type": "object",
    "summary": "<p>Accessibility utility functions (keyboard, tab stops, etc.)</p>\n",
    "methods": [
        {
            "name": "_getTabNavigable",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dijit/a11y",
            "private": true,
            "parameters": [
                {
                    "name": "root",
                    "types": [
                        "DOMNode"
                    ],
                    "usage": "required"
                }
            ],
            "returnTypes": [
                "object"
            ],
            "summary": "<p>Finds descendants of the specified root node.</p>\n",
            "description": "<p>Finds the following descendants of the specified root node:\n\n</p>\n<ul>\n<li>the first tab-navigable element in document order\nwithout a tabIndex or with tabIndex=&quot;0&quot;</li>\n<li>the last tab-navigable element in document order\nwithout a tabIndex or with tabIndex=&quot;0&quot;</li>\n<li>the first element in document order with the lowest\npositive tabIndex value</li>\n<li>the last element in document order with the highest\npositive tabIndex value</li>\n</ul>\n"
        },
        {
            "name": "_isElementShown",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dijit/a11y",
            "private": true,
            "parameters": [
                {
                    "name": "elem",
                    "types": [
                        "Element"
                    ],
                    "usage": "required"
                }
            ],
            "returnTypes": [
                "boolean"
            ]
        },
        {
            "name": "getFirstInTabbingOrder",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dijit/a11y",
            "parameters": [
                {
                    "name": "root",
                    "types": [
                        "String",
                        "DOMNode"
                    ],
                    "usage": "required"
                },
                {
                    "name": "doc",
                    "types": [
                        "Document"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "undefined"
            ],
            "summary": "<p>Finds the descendant of the specified root node\nthat is first in the tabbing order</p>\n"
        },
        {
            "name": "getLastInTabbingOrder",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dijit/a11y",
            "parameters": [
                {
                    "name": "root",
                    "types": [
                        "String",
                        "DOMNode"
                    ],
                    "usage": "required"
                },
                {
                    "name": "doc",
                    "types": [
                        "Document"
                    ],
                    "usage": "optional"
                }
            ],
            "returnTypes": [
                "undefined"
            ],
            "summary": "<p>Finds the descendant of the specified root node\nthat is last in the tabbing order</p>\n"
        },
        {
            "name": "hasDefaultTabStop",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dijit/a11y",
            "parameters": [
                {
                    "name": "elem",
                    "types": [
                        "Element"
                    ],
                    "usage": "required"
                }
            ],
            "returnTypes": [
                "undefined",
                "boolean"
            ],
            "summary": "<p>Tests if element is tab-navigable even without an explicit tabIndex setting</p>\n"
        },
        {
            "name": "isTabNavigable",
            "scope": "normal",
            "types": [
                "function"
            ],
            "from": "dijit/a11y",
            "parameters": [
                {
                    "name": "elem",
                    "types": [
                        "Element"
                    ],
                    "usage": "required"
                }
            ],
            "returnTypes": [
                "boolean",
                "undefined"
            ],
            "summary": "<p>Tests if an element is tab-navigable</p>\n"
        }
    ],
    "rootPath": "../../",
    "shortName": "a11y"
}