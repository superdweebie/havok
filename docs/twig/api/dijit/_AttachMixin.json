{
    "location": "dijit/_AttachMixin",
    "type": "constructor",
    "classlike": true,
    "parameters": [
        {
            "name": "params",
            "types": [
                "Object",
                "null"
            ],
            "usage": "required",
            "summary": "<p>Hash of initialization parameters for widget, including scalar values (like title, duration etc.)\nand functions, typically callbacks like onClick.\nThe hash can contain any of the widget&#39;s properties, excluding read-only properties.</p>\n"
        },
        {
            "name": "srcNodeRef",
            "types": [
                "DOMNode",
                "String"
            ],
            "usage": "optional",
            "summary": "<p>If a srcNodeRef (DOM node) is specified, replace srcNodeRef with my generated DOM tree.</p>\n"
        }
    ],
    "returnTypes": [],
    "summary": "<p>Mixin for widgets to attach to dom nodes and setup events via\nconvenient data-dojo-attach-point and data-dojo-attach-event DOM attributes.\n\n</p>\n<p>Superclass of _TemplatedMixin, and can also be used standalone when templates are pre-rendered on the\nserver.\n\n</p>\n<p>Does not [yet] handle widgets like ContentPane with this.containerNode set.   It should skip\nscanning for data-dojo-attach-point and data-dojo-attach-event inside this.containerNode, but it\ndoesn&#39;t.</p>\n",
    "properties": [
        {
            "name": "_attachEvents",
            "scope": "prototype",
            "types": [
                "Handle[]"
            ],
            "from": "dijit/_AttachMixin",
            "private": true,
            "tags": [
                "private"
            ],
            "summary": "<p>List of connections associated with data-dojo-attach-event=... in the\ntemplate</p>\n"
        },
        {
            "name": "_attachPoints",
            "scope": "prototype",
            "types": [
                "String[]"
            ],
            "from": "dijit/_AttachMixin",
            "private": true,
            "tags": [
                "private"
            ],
            "summary": "<p>List of widget attribute names associated with data-dojo-attach-point=... in the\ntemplate, ex: [&quot;containerNode&quot;, &quot;labelNode&quot;]</p>\n"
        },
        {
            "name": "attachScope",
            "scope": "prototype",
            "types": [
                "Object"
            ],
            "from": "dijit/_AttachMixin",
            "tags": [
                "public"
            ],
            "summary": "<p>Object to which attach points and events will be scoped.  Defaults\nto &#39;this&#39;.</p>\n"
        },
        {
            "name": "searchContainerNode",
            "scope": "prototype",
            "types": [
                "Boolean"
            ],
            "from": "dijit/_AttachMixin",
            "tags": [
                "protected"
            ],
            "summary": "<p>Search descendants of this.containerNode for data-dojo-attach-point and data-dojo-attach-event.\nShould generally be left false (the default value) both for performance and to avoid failures when\nthis.containerNode holds other _AttachMixin instances with their own attach points and events.</p>\n"
        }
    ],
    "methods": [
        {
            "name": "_attach",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dijit/_AttachMixin",
            "private": true,
            "parameters": [
                {
                    "name": "node",
                    "types": [
                        "DOMNode"
                    ],
                    "usage": "required",
                    "summary": "<p>The node to setup a listener on.</p>\n"
                },
                {
                    "name": "type",
                    "types": [
                        "String"
                    ],
                    "usage": "required",
                    "summary": "<p>Event name like &quot;click&quot;.</p>\n"
                },
                {
                    "name": "func",
                    "types": [
                        "undefined"
                    ],
                    "usage": "required"
                }
            ],
            "returnTypes": [
                "undefined"
            ],
            "summary": "<p>Roughly corresponding to dojo/on, this is the default function for processing a\ndata-dojo-attach-event.  Meant to attach to DOMNodes, not to widgets.</p>\n"
        },
        {
            "name": "_attachTemplateNodes",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dijit/_AttachMixin",
            "private": true,
            "tags": [
                "private"
            ],
            "parameters": [
                {
                    "name": "rootNode",
                    "types": [
                        "DomNode"
                    ],
                    "usage": "required",
                    "summary": "<p>The node to search for properties. All descendants will be searched.</p>\n"
                }
            ],
            "returnTypes": [],
            "summary": "<p>Iterate through the dom nodes and attach functions and nodes accordingly.</p>\n",
            "description": "<p>Map widget properties and functions to the handlers specified in\nthe dom node and it&#39;s descendants. This function iterates over all\nnodes and looks for these properties:\n\n</p>\n<ul>\n<li>dojoAttachPoint/data-dojo-attach-point</li>\n<li>dojoAttachEvent/data-dojo-attach-event</li>\n</ul>\n"
        },
        {
            "name": "_beforeFillContent",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dijit/_AttachMixin",
            "private": true,
            "parameters": [],
            "returnTypes": []
        },
        {
            "name": "_detachTemplateNodes",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dijit/_AttachMixin",
            "private": true,
            "parameters": [],
            "returnTypes": [],
            "summary": "<p>Detach and clean up the attachments made in _attachtempalteNodes.</p>\n"
        },
        {
            "name": "_processTemplateNode",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dijit/_AttachMixin",
            "private": true,
            "parameters": [
                {
                    "name": "baseNode",
                    "types": [
                        "DOMNode",
                        "Widget"
                    ],
                    "usage": "required"
                },
                {
                    "name": "getAttrFunc",
                    "types": [
                        "Function"
                    ],
                    "usage": "required",
                    "summary": "<p>Function to get the specified property for a given DomNode/Widget.</p>\n"
                },
                {
                    "name": "attachFunc",
                    "types": [
                        "Function"
                    ],
                    "usage": "optional",
                    "summary": "<p>Attaches an event handler from the specified node/widget to specified function.</p>\n"
                }
            ],
            "returnTypes": [
                "boolean"
            ],
            "summary": "<p>Process data-dojo-attach-point and data-dojo-attach-event for given node or widget.\nReturns true if caller should process baseNode&#39;s children too.</p>\n"
        },
        {
            "name": "buildRendering",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dijit/_AttachMixin",
            "tags": [
                "protected"
            ],
            "parameters": [],
            "returnTypes": [],
            "summary": "<p>Attach to DOM nodes marked with special attributes.</p>\n"
        },
        {
            "name": "constructor",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dijit/_AttachMixin",
            "parameters": [
                {
                    "name": "params",
                    "types": [
                        "Object",
                        "null"
                    ],
                    "usage": "required",
                    "summary": "<p>Hash of initialization parameters for widget, including scalar values (like title, duration etc.)\nand functions, typically callbacks like onClick.\nThe hash can contain any of the widget&#39;s properties, excluding read-only properties.</p>\n"
                },
                {
                    "name": "srcNodeRef",
                    "types": [
                        "DOMNode",
                        "String"
                    ],
                    "usage": "optional",
                    "summary": "<p>If a srcNodeRef (DOM node) is specified, replace srcNodeRef with my generated DOM tree.</p>\n"
                }
            ],
            "returnTypes": [],
            "summary": "<p>Create the widget.</p>\n"
        },
        {
            "name": "destroyRendering",
            "scope": "prototype",
            "types": [
                "function"
            ],
            "from": "dijit/_AttachMixin",
            "parameters": [],
            "returnTypes": []
        }
    ],
    "rootPath": "../../",
    "shortName": "_AttachMixin"
}